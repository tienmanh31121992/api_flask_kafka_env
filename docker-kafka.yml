version: '3.9'
services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - 2181:2181
    networks:
      - my-network
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
  kafka1:
    image: wurstmeister/kafka
    container_name: kafka1
    restart: always
    ports:
      - 9092:9092
    networks:
      - my-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: ${IP_MACHINE}
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "Test:3:3,Demo:2:3"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      JMX_PORT: 1099
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  kafka2:
    image: wurstmeister/kafka
    container_name: kafka2
    restart: always
    ports:
      - 9093:9092
      - 9102:9101
    networks:
      - my-network
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_HOST_NAME: ${IP_MACHINE}
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "Test:3:3,Demo:2:3"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      JMX_PORT: 1099
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
      - kafka1
  kafka3:
    image: wurstmeister/kafka
    container_name: kafka3
    restart: always
    ports:
      - 9094:9092
      - 9103:9101
    networks:
      - my-network
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_HOST_NAME: ${IP_MACHINE}
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "Test:3:3,Demo:2:3"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      JMX_PORT: 1099
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
      - kafka2
  kafka-manager:
    image: hlebalbau/kafka-manager
    container_name: kafka-manager
    restart: always
    ports:
      - 9000:9000
    networks:
      - my-network
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: random-secret
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
networks:
  my-network:
    driver: bridge
    name: my-network